package org.example.service;

import org.example.domain.DBRestaurantRepository;
import org.example.domain.UserRepository;

import java.util.List;

public class ReminderService {
    private final UserRepository userRepository;
    private final DBRestaurantRepository restaurantRepository;
    private final MessageSender messageSender;

    public ReminderService(UserRepository userRepository,
                           DBRestaurantRepository restaurantRepository,
                           MessageSender messageSender) {
        this.userRepository = userRepository;
        this.restaurantRepository = restaurantRepository;
        this.messageSender = messageSender;
    }

    public void sendRemindersToAllUsers() {
        List<Long> chatIds = userRepository.findAllChatIds();
        System.out.println("–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: " + chatIds.size());

        if (chatIds.isEmpty()) {
            System.out.println("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π!");
        }

        chatIds.forEach(chatId -> {
            try {
                String phone = userRepository.findPhoneByChatId(chatId);
                System.out.println("–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è: " + chatId + " (—Ç–µ–ª–µ—Ñ–æ–Ω: " + phone + ")");

                List<String> restaurants = restaurantRepository.getRestaurantsByUserId(chatId);
                String message = buildReminderMessage(restaurants);
                messageSender.sendMessage(chatId, message);

                System.out.println("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è: " + chatId);
            } catch (Exception e) {
                System.err.println("–û—à–∏–±–∫–∞ –¥–ª—è " + chatId + ": " + e.getMessage());
            }
        });
    }

    private String buildReminderMessage(List<String> restaurants) {
        if (restaurants.isEmpty()) {
            return "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —Å–µ–≥–æ–¥–Ω—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å —Å–¥–∞—á–∏ —Ç–∞–±–µ–ª—è!";
        }

        StringBuilder sb = new StringBuilder();
        sb.append("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —Å–µ–≥–æ–¥–Ω—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å —Å–¥–∞—á–∏ —Ç–∞–±–µ–ª—è!\n\n");
        sb.append("üçΩ –í–∞—à–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã:\n");

        for (int i = 0; i < restaurants.size(); i++) {
            sb.append(i + 1).append(". ").append(restaurants.get(i)).append("\n");
        }

        sb.append("\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–¥–∞—Ç—å —Ç–∞–±–µ–ª—å –ø–æ –≤—Å–µ–º —Ç–æ—á–∫–∞–º!");
        return sb.toString();
    }
}